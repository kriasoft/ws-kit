name: Release

on:
  push:
    branches: [main]

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  # Ensure CI passes before releasing
  ci:
    uses: ./.github/workflows/ci.yml

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: ci
    environment: "release"
    permissions:
      contents: write # to commit changelogs / version bumps
      id-token: write # to open or update the Version PR
      packages: write # for npm provenance (recommended)
    steps:
      - uses: actions/checkout@v5
        with: { fetch-depth: 0 } # changesets needs tags/history to compute versions
      - uses: actions/setup-node@v6
        with: { node-version: "lts/*" }
      - uses: oven-sh/setup-bun@v2
        with: { bun-version: "latest" }
      - uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: bun-${{ runner.os }}-${{ hashFiles('bun.lock') }}
      - run: bun install --frozen-lockfile
      - run: bun run build
      - name: Setup NPM and Git
        run: |
          npm config set //registry.npmjs.org/:_authToken=${NPM_TOKEN}
          echo "NPM_CONFIG_PROVENANCE=true" >> $GITHUB_ENV
          git config user.name "Kriasoft Bot"
          git config user.email "32681572+kriasoft-bot@users.noreply.github.com"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - uses: changesets/action@v1
        with:
          publish: bun changeset publish
          version: bun changeset version
          commit: "chore: version and release packages"
          title: "chore: version and release packages"
          setupGitUser: false
          createGithubReleases: true
        env:
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
