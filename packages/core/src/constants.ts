// SPDX-FileCopyrightText: 2025-present Kriasoft
// SPDX-License-Identifier: MIT

/**
 * Reserved control message type prefix.
 *
 * All internal control messages use this prefix (e.g., `$ws:abort`).
 * User-defined message types cannot start with this prefix.
 * Enforced at design-time (schema creation) and runtime (message dispatch).
 *
 * Reference: @docs/specs/rules.md#reserved-types
 */
export const RESERVED_CONTROL_PREFIX = "$ws:";

/**
 * Reserved server-only meta keys.
 *
 * These keys are used for server-controlled metadata and cannot be overridden
 * by clients. The router enforces this through defense-in-depth:
 *
 * - **Design-time**: Schema creation throws if extended meta defines these keys
 * - **Runtime**: Inbound messages have these keys stripped before validation
 *
 * This prevents client spoofing of server-controlled timestamps and identifiers.
 *
 * Reference: @docs/specs/rules.md#reserved-keys
 * Implementation: @docs/specs/validation.md#normalization-rules
 */
export const RESERVED_META_KEYS = new Set<string>([
  "clientId", // UUID v7 generated by server on connection
  "receivedAt", // Server ingress timestamp, set by router
]);

/**
 * Type for reserved meta key literals.
 *
 * Useful for type-safe operations on reserved keys.
 */
export type ReservedMetaKey = "clientId" | "receivedAt";

/**
 * Default configuration values.
 *
 * These are used if not overridden in WebSocketRouterOptions.
 */
export const DEFAULT_CONFIG = {
  /** Default ping interval (30 seconds) */
  HEARTBEAT_INTERVAL_MS: 30_000,

  /** Default pong timeout (5 seconds) */
  HEARTBEAT_TIMEOUT_MS: 5_000,

  /** Default max payload size (1 MB) */
  MAX_PAYLOAD_BYTES: 1_000_000,

  /** Default server ingress timestamp field in meta */
  TIMESTAMP_FIELD: "receivedAt",

  /** Default max queued bytes per socket before backpressure (1 MB) */
  MAX_QUEUED_BYTES_PER_SOCKET: 1_000_000,

  /** Default RPC request timeout (30 seconds) */
  DEFAULT_RPC_TIMEOUT_MS: 30_000,

  /** Default client resend window after reconnect (5 seconds) */
  RESEND_WINDOW_MS: 5_000,
} as const;
